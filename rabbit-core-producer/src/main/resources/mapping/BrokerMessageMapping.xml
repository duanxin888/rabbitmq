<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duanxin.rabbit.producer.mapper.BrokerMessageMapper">

    <resultMap type="com.duanxin.rabbit.producer.entity.BrokerMessage" id="BrokerMessageMap">
        <result property="messageId" column="message_id" jdbcType="VARCHAR"/>
        <result property="message" column="message" jdbcType="VARCHAR"
                typeHandler="com.duanxin.rabbit.common.mybatis.handler.MessageJsonTypeHandler"/>
        <result property="tryCount" column="try_count" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="nextRetry" column="next_retry" jdbcType="TIMESTAMP"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BrokerMessageMap">
        select
          message_id, message, try_count, status, next_retry, create_time, update_time
        from broker_message.broker_message
        where message_id = #{messageId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BrokerMessageMap">
        select
          message_id, message, try_count, status, next_retry, create_time, update_time
        from broker_message.broker_message
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BrokerMessageMap">
        select
          message_id, message, try_count, status, next_retry, create_time, update_time
        from broker_message.broker_message
        <where>
            <if test="messageId != null and messageId != ''">
                and message_id = #{messageId}
            </if>
            <if test="message != null and message != ''">
                and message = #{message}
            </if>
            <if test="tryCount != null">
                and try_count = #{tryCount}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="nextRetry != null">
                and next_retry = #{nextRetry}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>
    <select id="selectBrokerMessageStatus4Timeout" resultMap="BrokerMessageMap"><![CDATA[
        select `message_id`, `message`, `try_count`, `status`, `next_retry`, `create_time`, `update_time`
        from `broker_message` bm
        where bm.status = #{brokerMessageStatus} and
        bm.next_retry < sysdate()]]>;
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="messageId" useGeneratedKeys="true">
        insert into broker_message.broker_message(message_id, message, try_count, status, next_retry, create_time, update_time)
        values (#{messageId,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR, typeHandler=com.duanxin.rabbit.common.mybatis.handler.MessageJsonTypeHandler}, #{tryCount,jdbcType=INTEGER},
      #{status,jdbcType=VARCHAR}, #{nextRetry,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update broker_message.broker_message
        <set>
            <if test="message != null and message != ''">
                message = #{message},
            </if>
            <if test="tryCount != null">
                try_count = #{tryCount},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="nextRetry != null">
                next_retry = #{nextRetry},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where message_id = #{messageId}
    </update>

    <!-- 更新消息状态 -->
    <update id="changeBrokerMessageStatus" parameterType="map">
        update broker_message
        set status = #{code}, update_time = #{update}
        where message_id = #{messageId}
    </update>
    <update id="update4TryCount">
        update `broker_message` bm
        set bm.try_count = bm.try_count + 1,
        bm.update_time = #{updateTime}
        where bm.message_id = #{brokerMessageId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from broker_message.broker_message where message_id = #{messageId}
    </delete>

</mapper>